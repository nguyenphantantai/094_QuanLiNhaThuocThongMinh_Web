import { connectDB } from '../config/database.js';
import { Category, Product, User } from '../models/schema.js';
import bcrypt from 'bcryptjs';

const seedData = async () => {
  try {
    console.log('üå± Starting database seeding...');

    // Connect to database
    await connectDB();

    // Clear existing data
    await User.deleteMany({});
    await Product.deleteMany({});
    await Category.deleteMany({});

    console.log('üóëÔ∏è Cleared existing data');

    // Create categories
    const categories = await Category.insertMany([
      {
        name: 'Thu·ªëc',
        icon: 'Pill',
        slug: 'thuoc',
        description: 'C√°c lo·∫°i thu·ªëc k√™ ƒë∆°n v√† kh√¥ng k√™ ƒë∆°n',
      },
      {
        name: 'Th·ª±c ph·∫©m b·∫£o v·ªá s·ª©c kh·ªèe',
        icon: 'Sparkles',
        slug: 'thuc-pham-bao-ve-suc-khoe',
        description: 'Vitamin, kho√°ng ch·∫•t v√† th·ª±c ph·∫©m ch·ª©c nƒÉng',
      },
      {
        name: 'ChƒÉm s√≥c c√° nh√¢n',
        icon: 'Heart',
        slug: 'cham-soc-ca-nhan',
        description: 'S·∫£n ph·∫©m chƒÉm s√≥c s·ª©c kh·ªèe c√° nh√¢n',
      },
      {
        name: 'ChƒÉm s√≥c s·∫Øc ƒë·∫πp',
        icon: 'Sparkles',
        slug: 'cham-soc-sac-dep',
        description: 'M·ªπ ph·∫©m v√† s·∫£n ph·∫©m l√†m ƒë·∫πp',
      },
      {
        name: 'Thi·∫øt b·ªã y t·∫ø',
        icon: 'Syringe',
        slug: 'thiet-bi-y-te',
        description: 'C√°c thi·∫øt b·ªã y t·∫ø v√† d·ª•ng c·ª• chƒÉm s√≥c s·ª©c kh·ªèe',
      },
    ]);

    console.log('üìÇ Created categories');

    // Create sample products
    const products = await Product.insertMany([
      {
        name: 'Paracetamol 500mg',
        description: 'Thu·ªëc gi·∫£m ƒëau, h·∫° s·ªët hi·ªáu qu·∫£',
        price: 25000,
        originalPrice: 30000,
        discountPercentage: 17,
        imageUrl: 'https://via.placeholder.com/300x300?text=Paracetamol',
        categoryId: categories[0]._id,
        brand: 'Traphaco',
        unit: 'H·ªôp 10 vi√™n',
        inStock: true,
        stockQuantity: 100,
        isHot: true,
        isNew: false,
        isPrescription: false,
      },
      {
        name: 'Vitamin C 1000mg',
        description: 'TƒÉng c∆∞·ªùng s·ª©c ƒë·ªÅ kh√°ng, ch·ªëng oxy h√≥a',
        price: 150000,
        originalPrice: 180000,
        discountPercentage: 17,
        imageUrl: 'https://via.placeholder.com/300x300?text=Vitamin+C',
        categoryId: categories[1]._id,
        brand: 'Nature Made',
        unit: 'H·ªôp 100 vi√™n',
        inStock: true,
        stockQuantity: 50,
        isHot: true,
        isNew: true,
        isPrescription: false,
      },
      {
        name: 'Kem ch·ªëng n·∫Øng SPF 50+',
        description: 'B·∫£o v·ªá da kh·ªèi tia UV, ch·ªëng l√£o h√≥a',
        price: 350000,
        originalPrice: 400000,
        discountPercentage: 13,
        imageUrl: 'https://via.placeholder.com/300x300?text=Sunscreen',
        categoryId: categories[3]._id,
        brand: 'La Roche-Posay',
        unit: 'Tu√Ωp 50ml',
        inStock: true,
        stockQuantity: 30,
        isHot: false,
        isNew: true,
        isPrescription: false,
      },
      {
        name: 'Nhi·ªát k·∫ø ƒëi·ªán t·ª≠',
        description: 'ƒêo nhi·ªát ƒë·ªô c∆° th·ªÉ ch√≠nh x√°c, d·ªÖ s·ª≠ d·ª•ng',
        price: 120000,
        originalPrice: 150000,
        discountPercentage: 20,
        imageUrl: 'https://via.placeholder.com/300x300?text=Thermometer',
        categoryId: categories[4]._id,
        brand: 'Omron',
        unit: 'C√°i',
        inStock: true,
        stockQuantity: 25,
        isHot: false,
        isNew: false,
        isPrescription: false,
      },
      {
        name: 'Probiotics cho tr·∫ª em',
        description: 'H·ªó tr·ª£ ti√™u h√≥a, tƒÉng c∆∞·ªùng mi·ªÖn d·ªãch',
        price: 280000,
        originalPrice: 320000,
        discountPercentage: 13,
        imageUrl: 'https://via.placeholder.com/300x300?text=Probiotics',
        categoryId: categories[1]._id,
        brand: 'BioGaia',
        unit: 'H·ªôp 30 g√≥i',
        inStock: true,
        stockQuantity: 40,
        isHot: true,
        isNew: false,
        isPrescription: false,
      },
    ]);

    console.log('üíä Created products');

    // Create admin user
    const hashedPassword = await bcrypt.hash('admin123', 12);
    const adminUser = await User.create({
      email: 'admin@pharmacy.com',
      phone: '0123456789',
      password: hashedPassword,
      firstName: 'Admin',
      lastName: 'Pharmacy',
      role: 'admin',
      isVerified: true,
    });

    // Create sample customer
    const customerPassword = await bcrypt.hash('customer123', 12);
    const customer = await User.create({
      email: 'customer@example.com',
      phone: '0987654321',
      password: customerPassword,
      firstName: 'Nguy·ªÖn',
      lastName: 'VƒÉn A',
      role: 'customer',
      isVerified: true,
    });

    console.log('üë• Created users');

    console.log('‚úÖ Database seeding completed successfully!');
    console.log('\nüìã Sample data created:');
    console.log(`- ${categories.length} categories`);
    console.log(`- ${products.length} products`);
    console.log(`- 2 users (admin & customer)`);
    console.log('\nüîë Login credentials:');
    console.log('Admin: admin@pharmacy.com / admin123');
    console.log('Customer: customer@example.com / customer123');

  } catch (error) {
    console.error('‚ùå Seeding failed:', error);
  } finally {
    process.exit(0);
  }
};

seedData();



